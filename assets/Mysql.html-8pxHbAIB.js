import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-G0i2mb_3.js";const t="/my-blob/assets/Mysql-%E4%BC%81%E4%B8%9A%E5%BC%80%E5%8F%91%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F-BcplMZsY.png",p="/my-blob/assets/SQL%E9%80%9A%E7%94%A8%E8%AF%AD%E6%B3%95-DlbVRYNp.png",o="/my-blob/assets/SQL%E5%88%86%E7%B1%BB-Cy7j1t5h.png",l="/my-blob/assets/DDL%EF%BC%88%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%EF%BC%89-Ba3adSJg.png",c="/my-blob/assets/%E8%A1%A8%EF%BC%88%E5%88%9B%E5%BB%BA%EF%BC%89-BTILt6Tp.png",i="/my-blob/assets/%E8%A1%A8%EF%BC%88%E7%BA%A6%E6%9D%9F%EF%BC%89-XDhT3_yy.png",r="/my-blob/assets/%E8%A1%A8%EF%BC%88%E6%9F%A5%E8%AF%A2%EF%BC%89-DK7L3kva.png",u="/my-blob/assets/%E8%A1%A8%EF%BC%88%E4%BF%AE%E6%94%B9%EF%BC%89-uLITYLT-.png",d="/my-blob/assets/%E8%A1%A8%EF%BC%88%E5%88%A0%E9%99%A4%EF%BC%89-CYgLAbuY.png",k="/my-blob/assets/DML%EF%BC%88insert%EF%BC%89-U67N79R9.png",m="/my-blob/assets/DML%EF%BC%88update%EF%BC%89-QqFbAd_U.png",b="/my-blob/assets/DML%EF%BC%88delete%EF%BC%89-B6FJ5C7u.png",v="/my-blob/assets/DQL%E8%AF%AD%E6%B3%95-DfJVXVo4.png",g="/my-blob/assets/DQL%EF%BC%88%E5%9F%BA%E6%9C%AC%E6%9F%A5%E8%AF%A2%EF%BC%89-DE8OUPjP.png",y="/my-blob/assets/DQL%EF%BC%88%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%EF%BC%89-BLswWls1.png",h="/my-blob/assets/%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0-CpppjmiE.png",w="/my-blob/assets/DQL%EF%BC%88%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%EF%BC%89-C0HxVG2o.png",f="/my-blob/assets/DQL%EF%BC%88%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2%EF%BC%89-Nvi-GtFF.png",q="/my-blob/assets/DQL%EF%BC%88%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%EF%BC%89-X4b0U0UE.png",_="/my-blob/assets/DQL%EF%BC%88%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%EF%BC%89-Bq477zpl.png",E="/my-blob/assets/DQL%E5%87%BD%E6%95%B0-qqfuC2SU.png",D={},B=e('<h1 id="mysql-基础" tabindex="-1"><a class="header-anchor" href="#mysql-基础"><span>Mysql 基础</span></a></h1><h2 id="mysql-概述" tabindex="-1"><a class="header-anchor" href="#mysql-概述"><span>Mysql 概述</span></a></h2><blockquote><p>什么是数据库？</p><ul><li>数据库：DataBase（DB），是存储和管理数据的仓库</li><li>数据库管理系统:DataBase ManagementSystem(DBMS)，操纵和管理数据库的大型软件。</li><li>SQL:Structured QueryLanguage，操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准。</li></ul></blockquote><figure><img src="'+t+'" alt="Mysql-企业开发使用方式" tabindex="0" loading="lazy"><figcaption>Mysql-企业开发使用方式</figcaption></figure><h3 id="数据模型" tabindex="-1"><a class="header-anchor" href="#数据模型"><span>数据模型</span></a></h3><ul><li>关系型数据库(RDBMS):建立在关系模型基础上，由多张相互连接的 <code>二维表 </code> 组成的数据库</li></ul><h3 id="mysql-数据模型" tabindex="-1"><a class="header-anchor" href="#mysql-数据模型"><span>MYSQL 数据模型</span></a></h3><ul><li>创建数据库： <code>create database 数据库名字</code></li></ul><h3 id="sql-简介" tabindex="-1"><a class="header-anchor" href="#sql-简介"><span>SQL 简介</span></a></h3><ul><li>SQL:一门操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准。</li></ul><figure><img src="'+p+'" alt="SQL通用语法" tabindex="0" loading="lazy"><figcaption>SQL通用语法</figcaption></figure><ul><li>SQL 语句通常被分为四大类：</li></ul><figure><img src="'+o+'" alt="SQL分类" tabindex="0" loading="lazy"><figcaption>SQL分类</figcaption></figure><h2 id="数据库设计—ddl" tabindex="-1"><a class="header-anchor" href="#数据库设计—ddl"><span>数据库设计—DDL</span></a></h2><h3 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h3><figure><img src="'+l+'" alt="DDL（数据库操作）" tabindex="0" loading="lazy"><figcaption>DDL（数据库操作）</figcaption></figure><blockquote><p>上述语法中的 database，也可以替换成 schema。如:create schema db01;</p></blockquote><h3 id="表-创建、查询、修改、删除" tabindex="-1"><a class="header-anchor" href="#表-创建、查询、修改、删除"><span>表（创建、查询、修改、删除）</span></a></h3><h4 id="创建" tabindex="-1"><a class="header-anchor" href="#创建"><span>创建</span></a></h4><figure><img src="'+c+'" alt="表（创建）" tabindex="0" loading="lazy"><figcaption>表（创建）</figcaption></figure><blockquote><p>约束</p><ul><li>概念约束是作用于表中字段上的规则，用于限制存储在表中的数据，</li><li>目的:保证数据库中数据的正确性、有效性和完整性。</li></ul><figure><img src="'+i+'" alt="表（约束）" tabindex="0" loading="lazy"><figcaption>表（约束）</figcaption></figure></blockquote><h4 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h4><ul><li>MySQL 中的数据类型有很多，主要分为三类:数值类型、字符串类型、<br> 日期时间类型</li></ul><blockquote><ul><li><p>日期时间类型</p></li><li><p>date：YYYY-MM-DD 日期值</p></li><li><p>datetime：YYYY-MM-DD HH:MM:SS 混合日期和时间值</p></li><li><p>字符串类型</p></li><li><p>char：<code>char(10):最多只能存10个字特,不足10个字符,占用10个字符空间 AB 性能高 浪费空间</code></p></li><li><p>varchar：<code>varchar(10):最多只能存10个字符,不足10个字符,按照实际长度存储 ABC 性能低 节省空间</code></p></li><li><p>数值类型</p></li><li><p>tinyint：小整数值</p></li><li><p>int：大整数值</p></li><li><p>bigint：极大整数值</p></li><li><p>double：双精度浮点数值</p></li></ul></blockquote><h4 id="查询" tabindex="-1"><a class="header-anchor" href="#查询"><span>查询</span></a></h4><figure><img src="'+r+'" alt="表（查询）" tabindex="0" loading="lazy"><figcaption>表（查询）</figcaption></figure><h4 id="修改" tabindex="-1"><a class="header-anchor" href="#修改"><span>修改</span></a></h4><figure><img src="'+u+'" alt="表（修改）" tabindex="0" loading="lazy"><figcaption>表（修改）</figcaption></figure><h4 id="删除" tabindex="-1"><a class="header-anchor" href="#删除"><span>删除</span></a></h4><figure><img src="'+d+'" alt="表（删除）" tabindex="0" loading="lazy"><figcaption>表（删除）</figcaption></figure><blockquote><p>再删除表时，表中的全部数据也会被删除</p></blockquote><h2 id="数据库操作-dml" tabindex="-1"><a class="header-anchor" href="#数据库操作-dml"><span>数据库操作-DML</span></a></h2><blockquote><p>DML</p><ul><li>DML 英文全称是 Data Manipulation Language(数据操作语言)，用来对数据库中表的数据记录进行增、删、改操作。</li></ul><p>添加数据（INSERT）</p><p>修改数据（UPDATE）</p><p>删除数据（DELETE）</p></blockquote><h4 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据"><span>添加数据</span></a></h4><figure><img src="'+k+`" alt="DML（insert）" tabindex="0" loading="lazy"><figcaption>DML（insert）</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 插入新数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_emp<span class="token punctuation">(</span>username<span class="token punctuation">,</span>name<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>create_date<span class="token punctuation">,</span>update_date<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;zhangwuji&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;张无忌&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 为emp表的所有字段插入值</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> image<span class="token punctuation">,</span> job<span class="token punctuation">,</span> entry_date<span class="token punctuation">,</span> create_date<span class="token punctuation">,</span> update_date<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;zhiruo&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;周芷若&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;1.jpg&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;2021-01-01&#39;</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_emp <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;zhiruo2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;周芷若2&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;1.jpg&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;2021-01-01&#39;</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 批量插入数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_emp<span class="token punctuation">(</span>username<span class="token punctuation">,</span>name<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>create_date<span class="token punctuation">,</span>update_date<span class="token punctuation">)</span>
<span class="token keyword">values</span>
    <span class="token punctuation">(</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;wangwu&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>1、插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</p><p>2、字符串和日期型数据应该包含在引号中。</p><p>3、插入的数据大小，应该在字段的规定范围内。</p></blockquote><h4 id="修改数据" tabindex="-1"><a class="header-anchor" href="#修改数据"><span>修改数据</span></a></h4><figure><img src="`+m+`" alt="DML（update）" tabindex="0" loading="lazy"><figcaption>DML（update）</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 将emp表的 ID为1的员工 的姓名 name 改为&quot;张三&quot;</span>
<span class="token keyword">update</span> tb_emp <span class="token keyword">set</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span>update_date <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- 将emp表的所有员工的入职日期改为 &quot;2010-01-01&quot;</span>
<span class="token keyword">update</span> tb_emp <span class="token keyword">set</span> entry_date <span class="token operator">=</span> <span class="token string">&#39;2010-01-01&#39;</span><span class="token punctuation">,</span>update_date <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的数据</p></blockquote><h4 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h4><figure><img src="`+b+`" alt="DML（delete）" tabindex="0" loading="lazy"><figcaption>DML（delete）</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 删除emp表中ID为1的员工</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- 删除emp表的所有员工</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>1、DELETE语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的数据</p><p>2、DELETE语句不能删除某一个字段的值（如果要操作，可以使用UPDATE，将该字段的值为NULL）</p></blockquote><h2 id="数据库操作—dql" tabindex="-1"><a class="header-anchor" href="#数据库操作—dql"><span>数据库操作—DQL</span></a></h2><blockquote><p>DQL</p><ul><li>DQL英文全称是Data Query Language(数据查询语言)，用来查询数据库表中的记录。</li><li>关键字:SELECT</li></ul></blockquote><figure><img src="`+v+'" alt="DQL语法" tabindex="0" loading="lazy"><figcaption>DQL语法</figcaption></figure><h3 id="基本查询" tabindex="-1"><a class="header-anchor" href="#基本查询"><span>基本查询</span></a></h3><figure><img src="'+g+`" alt="DQL（基本查询）" tabindex="0" loading="lazy"><figcaption>DQL（基本查询）</figcaption></figure><blockquote><p><code>*</code> 号代表查询所有字段，在实际开发中尽量少用（不直观，影响效率）</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 查询指定字段 name,entrydate 并返回</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>entrydate <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 查询返回所有字段</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 查询所有员工的 name， entrydate 并起别名（姓名，入职日期）</span>
<span class="token keyword">select</span> name <span class="token keyword">as</span> 姓名<span class="token punctuation">,</span> entrydate <span class="token keyword">as</span> 入职日期 <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token keyword">select</span> name  姓名<span class="token punctuation">,</span> entrydate  入职日期 <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token keyword">select</span> name <span class="token keyword">as</span> <span class="token string">&quot;姓 名&quot;</span><span class="token punctuation">,</span> entrydate <span class="token keyword">as</span> 入职日期 <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 查询已有的员工关联了哪几种职位（不要重复）</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> job <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询"><span>条件查询</span></a></h3><figure><img src="`+y+`" alt="DQL（条件查询）" tabindex="0" loading="lazy"><figcaption>DQL（条件查询）</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- =================== DOL:条件查询 =========================</span>
<span class="token comment">-- 1.查询 姓名 为 杨逍 的员工</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;杨逍&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 2、查询 id小于等于5 的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> id <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">-- 3、查询 没有分配职位 的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> job <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>

<span class="token comment">-- 4、查询 有职位 的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> job <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">;</span>

<span class="token comment">-- 5.查询 密码不等于&#39;123456&#39; 的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> password <span class="token operator">!=</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
或
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> password <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 6、查询 入职日期在2000-01-01&#39;(包含)到·2010-01-01&#39;(包含)之间的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> entrydate <span class="token operator">&gt;=</span> <span class="token string">&#39;2000-01-01&#39;</span> <span class="token operator">and</span> entrydate <span class="token operator">&lt;=</span> <span class="token string">&#39;2010-01-01&#39;</span><span class="token punctuation">;</span>
或
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> entrydate <span class="token operator">between</span> <span class="token string">&#39;2000-01-01&#39;</span> <span class="token operator">and</span> <span class="token string">&#39;2010-01-01&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 7、查询 入职日期在2000-01-01&#39;(包含)到·2010-01-01&#39;(包含)之间 且 性别为女 的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> entrydate <span class="token operator">between</span> <span class="token string">&#39;2000-01-01&#39;</span> <span class="token operator">and</span> <span class="token string">&#39;2010-01-01&#39;</span><span class="token operator">and</span> gender <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 8、査询 职位是2(讲师)，3(学工主管)，4(教研主管)的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> job <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">or</span> job <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">or</span> job <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
或
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> job <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 9、查询 姓名 为两个字的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;__&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 10、查询 姓&#39;张”的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询"><span>分组查询</span></a></h3><h4 id="集合函数" tabindex="-1"><a class="header-anchor" href="#集合函数"><span>集合函数</span></a></h4><figure><img src="`+h+`" alt="聚合函数" tabindex="0" loading="lazy"><figcaption>聚合函数</figcaption></figure><blockquote><ul><li>null值不参与所有聚合函数运算。</li><li>统计数量可以使用:<code>count(*)</code> <code>count(字段)</code> <code>count(常量)</code>，推荐使用<code>count(*)</code>。</li></ul></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 1、统计该企业员工数量</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 推荐使用</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 2、统计该企业最早入职的员工</span>
<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>entrydate<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 3、统计该企业最迟入职的员工</span>
<span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>entrydate<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 4、统计该企业员工 ID 的平均值</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>

<span class="token comment">-- 5、统计该企业员工的 ID 之和</span>
<span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分组查询-1" tabindex="-1"><a class="header-anchor" href="#分组查询-1"><span>分组查询</span></a></h4><figure><img src="`+w+`" alt="DQL（分组查询）" tabindex="0" loading="lazy"><figcaption>DQL（分组查询）</figcaption></figure><blockquote><p>where与having区别</p><ul><li>执行时机不同：where 是分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后对结果进行过滤。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li></ul></blockquote><blockquote><p>注意事项：</p><ul><li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义。</li><li>执行顺序：where &gt; 聚合函数 &gt; having。</li></ul></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 根据性别分组，统计男性和女性员工的数量</span>
<span class="token keyword">select</span> gender<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">;</span>

<span class="token comment">-- 先查询入职时间在 &#39;2015-01-01&#39; (包含) 以前的员工，并对结果根据职位分组，获取员工数量大于等于2的职位</span>
<span class="token keyword">select</span> job<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">where</span> entrydate <span class="token operator">&lt;=</span> <span class="token string">&#39;2015-01-01&#39;</span> <span class="token keyword">group</span> <span class="token keyword">by</span> job <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序查询" tabindex="-1"><a class="header-anchor" href="#排序查询"><span>排序查询</span></a></h3><figure><img src="`+f+'" alt="DQL（排序查询）" tabindex="0" loading="lazy"><figcaption>DQL（排序查询）</figcaption></figure><figure><img src="'+q+`" alt="DQL（排序方式）" tabindex="0" loading="lazy"><figcaption>DQL（排序方式）</figcaption></figure><blockquote><p>注意事项：如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 1。根据入期时间，对员工进行开序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">order</span> <span class="token keyword">by</span> entrydate <span class="token keyword">asc</span><span class="token punctuation">;</span>

<span class="token comment">-- 2、粮据入联时间，对员工进行降序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">order</span> <span class="token keyword">by</span> entrydate <span class="token keyword">desc</span> <span class="token punctuation">;</span>

<span class="token comment">-- 3.根据 入职时间 对公司的员工进行 升序排序, 入期时间相同，再按照 更新时间 进行降序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">order</span> <span class="token keyword">by</span> entrydate<span class="token punctuation">,</span>update_time <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询"><span>分页查询</span></a></h3><figure><img src="`+_+`" alt="DQL（分页查询）" tabindex="0" loading="lazy"><figcaption>DQL（分页查询）</figcaption></figure><blockquote><p>起始索引 = （页码 - 1）* 每页展示记录数</p></blockquote><blockquote><p>注意事项</p><ul><li>1、起始索引从0开始，起始索引=(查询页码-1)*每页显示记录数。</li><li>2、分页查询是数据库的方言，不同的数据库有不同的实现，MySQL中是LIMIT。</li><li>3、如果查询的是第一页数据，起始索引可以省略，直接简写为limit 10。</li></ul></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 1、从 起始索引0开始查询员工数据，每贝展示5条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">-- 2、查询 第1页 员工数据，每页展示5条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">-- 3、查询第2页员工数据，每页展示5条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>

<span class="token comment">-- 4、查询 第3页 员工数据，每页展示5条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><figure><img src="`+E+`" alt="DQL函数" tabindex="0" loading="lazy"><figcaption>DQL函数</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>
<span class="token keyword">select</span> <span class="token keyword">if</span><span class="token punctuation">(</span>gender <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;男性员工&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女性员工&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 性别<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> tb_emp <span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">;</span>


<span class="token keyword">select</span> <span class="token keyword">case</span> job <span class="token keyword">when</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">&#39;班主任&#39;</span> <span class="token keyword">when</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">&#39;讲师&#39;</span> <span class="token keyword">when</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">&#39;学工主管&#39;</span> <span class="token keyword">when</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">&#39;教研主管&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;未分配角色&#39;</span> <span class="token keyword">end</span> <span class="token keyword">as</span> 职位<span class="token punctuation">,</span>
       <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> tb_emp
<span class="token keyword">group</span> <span class="token keyword">by</span> job<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多表设计" tabindex="-1"><a class="header-anchor" href="#多表设计"><span>多表设计</span></a></h2><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务"><span>事务</span></a></h2><h2 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询"><span>多表查询</span></a></h2><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h2>`,82),L=[B];function x(M,A){return a(),s("div",null,L)}const C=n(D,[["render",x],["__file","Mysql.html.vue"]]),S=JSON.parse('{"path":"/category/Java/JavaWeb/Mysql.html","title":"Mysql 基础","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-05-22T00:00:00.000Z","category":["Mysql"],"tag":["Mysql"],"star":true,"description":"Mysql 基础 Mysql 概述 什么是数据库？ 数据库：DataBase（DB），是存储和管理数据的仓库 数据库管理系统:DataBase ManagementSystem(DBMS)，操纵和管理数据库的大型软件。 SQL:Structured QueryLanguage，操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准。 Mysql...","head":[["meta",{"property":"og:url","content":"https://studentdj.github.io/my-blob/category/Java/JavaWeb/Mysql.html"}],["meta",{"property":"og:site_name","content":"月岛"}],["meta",{"property":"og:title","content":"Mysql 基础"}],["meta",{"property":"og:description","content":"Mysql 基础 Mysql 概述 什么是数据库？ 数据库：DataBase（DB），是存储和管理数据的仓库 数据库管理系统:DataBase ManagementSystem(DBMS)，操纵和管理数据库的大型软件。 SQL:Structured QueryLanguage，操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准。 Mysql..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T03:27:51.000Z"}],["meta",{"property":"article:author","content":"月岛"}],["meta",{"property":"article:tag","content":"Mysql"}],["meta",{"property":"article:published_time","content":"2024-05-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T03:27:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mysql 基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T03:27:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"月岛\\",\\"url\\":\\"https://studentdj.github.io/my-blob/\\"}]}"]]},"headers":[{"level":2,"title":"Mysql 概述","slug":"mysql-概述","link":"#mysql-概述","children":[{"level":3,"title":"数据模型","slug":"数据模型","link":"#数据模型","children":[]},{"level":3,"title":"MYSQL 数据模型","slug":"mysql-数据模型","link":"#mysql-数据模型","children":[]},{"level":3,"title":"SQL 简介","slug":"sql-简介","link":"#sql-简介","children":[]}]},{"level":2,"title":"数据库设计—DDL","slug":"数据库设计—ddl","link":"#数据库设计—ddl","children":[{"level":3,"title":"数据库","slug":"数据库","link":"#数据库","children":[]},{"level":3,"title":"表（创建、查询、修改、删除）","slug":"表-创建、查询、修改、删除","link":"#表-创建、查询、修改、删除","children":[]}]},{"level":2,"title":"数据库操作-DML","slug":"数据库操作-dml","link":"#数据库操作-dml","children":[]},{"level":2,"title":"数据库操作—DQL","slug":"数据库操作—dql","link":"#数据库操作—dql","children":[{"level":3,"title":"基本查询","slug":"基本查询","link":"#基本查询","children":[]},{"level":3,"title":"条件查询","slug":"条件查询","link":"#条件查询","children":[]},{"level":3,"title":"分组查询","slug":"分组查询","link":"#分组查询","children":[]},{"level":3,"title":"排序查询","slug":"排序查询","link":"#排序查询","children":[]},{"level":3,"title":"分页查询","slug":"分页查询","link":"#分页查询","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"多表设计","slug":"多表设计","link":"#多表设计","children":[]},{"level":2,"title":"事务","slug":"事务","link":"#事务","children":[]},{"level":2,"title":"多表查询","slug":"多表查询","link":"#多表查询","children":[]},{"level":2,"title":"索引","slug":"索引","link":"#索引","children":[]}],"git":{"createdTime":1716539101000,"updatedTime":1716780471000,"contributors":[{"name":"DJ","email":"2412205377@qq.com","commits":3}]},"readingTime":{"minutes":7.78,"words":2333},"filePathRelative":"category/Java/JavaWeb/Mysql.md","localizedDate":"2024年5月22日","excerpt":"\\n<h2>Mysql 概述</h2>\\n<blockquote>\\n<p>什么是数据库？</p>\\n<ul>\\n<li>数据库：DataBase（DB），是存储和管理数据的仓库</li>\\n<li>数据库管理系统:DataBase ManagementSystem(DBMS)，操纵和管理数据库的大型软件。</li>\\n<li>SQL:Structured QueryLanguage，操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准。</li>\\n</ul>\\n</blockquote>\\n<figure><figcaption>Mysql-企业开发使用方式</figcaption></figure>","autoDesc":true}');export{C as comp,S as data};
